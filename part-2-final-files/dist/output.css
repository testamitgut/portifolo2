/*! tailwindcss v4.0.2 | MIT License | https://tailwindcss.com */
.pointer-events-auto {
  pointer-events: auto;
}
.pointer-events-none {
  pointer-events: none;
}
.visible {
  visibility: visible;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.top-1\/2 {
  top: calc(1/2 * 100%);
}
.right-1\/2 {
  right: calc(1/2 * 100%);
}
.right-1\/4 {
  right: calc(1/4 * 100%);
}
.left-1\/2 {
  left: calc(1/2 * 100%);
}
.left-1\/4 {
  left: calc(1/4 * 100%);
}
.z-10 {
  z-index: 10;
}
.order-1 {
  order: 1;
}
.order-2 {
  order: 2;
}
.mx-auto {
  margin-inline: auto;
}
.mr-auto {
  margin-right: auto;
}
.ml-auto {
  margin-left: auto;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.hidden {
  display: none;
}
.inline {
  display: inline;
}
.h-\[120px\] {
  height: 120px;
}
.h-\[1px\] {
  height: 1px;
}
.h-screen {
  height: 100vh;
}
.w-\[2px\] {
  width: 2px;
}
.w-\[120px\] {
  width: 120px;
}
.w-\[300px\] {
  width: 300px;
}
.w-full {
  width: 100%;
}
.w-max {
  width: max-content;
}
.max-w-\[400px\] {
  max-width: 400px;
}
.max-w-\[800px\] {
  max-width: 800px;
}
.shrink-0 {
  flex-shrink: 0;
}
.-translate-x-1\/2 {
  --tw-translate-x: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-y-1\/2 {
  --tw-translate-y: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-y-\[80px\] {
  --tw-translate-y: calc(80px * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.rotate-90 {
  rotate: 90deg;
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.cursor-grab {
  cursor: grab;
}
.resize {
  resize: both;
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.self-center {
  align-self: center;
}
.rounded-\[50px\] {
  border-radius: 50px;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-\[3px\] {
  border-style: var(--tw-border-style);
  border-width: 3px;
}
.border-\[\#47afa1\] {
  border-color: #47afa1;
}
.border-\[\#459bd5\] {
  border-color: #459bd5;
}
.border-\[\#999\] {
  border-color: #999;
}
.border-\[\#1788ae\] {
  border-color: #1788ae;
}
.border-\[\#fc815c\] {
  border-color: #fc815c;
}
.border-\[\#ffe578\] {
  border-color: #ffe578;
}
.bg-\[\#47afa1\] {
  background-color: #47afa1;
}
.bg-\[\#111\] {
  background-color: #111;
}
.bg-\[\#1788ae\] {
  background-color: #1788ae;
}
.bg-\[\#4595eb\] {
  background-color: #4595eb;
}
.bg-\[\#459bd5\] {
  background-color: #459bd5;
}
.bg-\[\#fc815c\] {
  background-color: #fc815c;
}
.bg-\[\#ffe578\] {
  background-color: #ffe578;
}
.bg-gradient-to-l {
  --tw-gradient-position: to left in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.from-\[\#1595b6\] {
  --tw-gradient-from: #1595b6;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-\[\#1f2667e6\] {
  --tw-gradient-to: #1f2667e6;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.px-\[10px\] {
  padding-inline: 10px;
}
.py-\[5px\] {
  padding-block: 5px;
}
.text-center {
  text-align: center;
}
.text-justify {
  text-align: justify;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.font-\[\'Merriweather\'\] {
  font-family: 'Merriweather';
}
.font-\[\'Nunito\'\] {
  font-family: 'Nunito';
}
.font-\[\'Spartan\'\] {
  font-family: 'Spartan';
}
.text-\[\#47afa1\] {
  color: #47afa1;
}
.text-\[\#459bd5\] {
  color: #459bd5;
}
.text-\[\#1788ae\] {
  color: #1788ae;
}
.text-\[\#b0b2c3\] {
  color: #b0b2c3;
}
.text-\[\#fc815c\] {
  color: #fc815c;
}
.text-\[\#ffe578\] {
  color: #ffe578;
}
.italic {
  font-style: italic;
}
.shadow-\[0_0px_50px_rgba\(59\,130\,246\,0\.6\)\] {
  --tw-shadow: 0 0px 50px var(--tw-shadow-color, rgba(59,130,246,0.6));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.drop-shadow-\[0_0px_60px_rgba\(59\,130\,246\,0\.6\)\] {
  --tw-drop-shadow: drop-shadow(0 0px 60px rgba(59,130,246,0.6));
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.drop-shadow-\[0_0px_80px_rgba\(59\,130\,246\,1\)\] {
  --tw-drop-shadow: drop-shadow(0 0px 80px rgba(59,130,246,1));
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.duration-100 {
  --tw-duration: 100ms;
  transition-duration: 100ms;
}
.duration-200 {
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.outline-none {
  --tw-outline-style: none;
  outline-style: none;
}
.after\:absolute {
  &::after {
    content: var(--tw-content);
    position: absolute;
  }
}
.after\:top-\[100px\] {
  &::after {
    content: var(--tw-content);
    top: 100px;
  }
}
.after\:left-1\/2 {
  &::after {
    content: var(--tw-content);
    left: calc(1/2 * 100%);
  }
}
.after\:hidden {
  &::after {
    content: var(--tw-content);
    display: none;
  }
}
.after\:w-\[2px\] {
  &::after {
    content: var(--tw-content);
    width: 2px;
  }
}
.after\:-translate-x-1\/2 {
  &::after {
    content: var(--tw-content);
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.after\:rotate-45 {
  &::after {
    content: var(--tw-content);
    rotate: 45deg;
  }
}
.after\:bg-\[\#444\] {
  &::after {
    content: var(--tw-content);
    background-color: #444;
  }
}
.after\:bg-inherit {
  &::after {
    content: var(--tw-content);
    background-color: inherit;
  }
}
.after\:content-\[\'\'\] {
  &::after {
    content: var(--tw-content);
    --tw-content: '';
    content: var(--tw-content);
  }
}
.hover\:scale-105 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:scale-110 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:bg-\[\#1280a4\] {
  &:hover {
    @media (hover: hover) {
      background-color: #1280a4;
    }
  }
}
.focus\:border-\[\#1788ae\] {
  &:focus {
    border-color: #1788ae;
  }
}
.focus\:ring-4 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-\[\#1788ae\] {
  &:focus {
    --tw-ring-color: #1788ae;
  }
}
.focus\:ring-\[\#4489a0\] {
  &:focus {
    --tw-ring-color: #4489a0;
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
